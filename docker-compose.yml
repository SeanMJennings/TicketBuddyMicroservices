services:
  sqlserver:
    container_name: sql-server
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=YourStrong@Passw0rd
    ports:
      - "1450:1433"
    restart: always
    volumes:
      - ticket_buddy_sql_server:/var/opt/mssql
    networks:
      - ticketbuddy-network
  aspire-dashboard:
    container_name: aspire-dashboard
    image: mcr.microsoft.com/dotnet/aspire-dashboard:latest
    environment:
      - ASPIRE_DASHBOARD_UNSECURED_ALLOW_ANONYMOUS:true
    ports:
      - "18888:18888"
      - "4317:18889"
    depends_on:
      - sqlserver
    networks:
      - ticketbuddy-network
  rabbitmq:
    container_name: rabbitmq
    image: masstransit/rabbitmq
    ports:
      - "15672:15672"
      - "5672:5672"
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - ticketbuddy-network
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 5s
      timeout: 5s
      retries: 5
  events-migrations:
    container_name: events-migrations
    build:
      context: .
      dockerfile: Events/Host.Migrations/Dockerfile
    depends_on:
      sqlserver:
        condition: service_started
    environment:
      - ENVIRONMENT=Development
    networks:
      - ticketbuddy-network
    restart: "no"
  events-api:
    container_name: events-api
    build:
      context: .
      dockerfile: Events/Host.Api/Dockerfile
    depends_on:
      events-migrations:
        condition: service_completed_successfully
      rabbitmq:
        condition: service_healthy
      aspire-dashboard:
        condition: service_started
    environment:
      - ENVIRONMENT=Development
    ports:
      - "8080:8080"
      - "8081:8081"
    restart: on-failure
    networks:
      - ticketbuddy-network
  events-messaging-outbox:
    container_name: events-messaging-outbox
    build:
      context: .
      dockerfile: Events/Host.Messaging.Outbox/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
      sqlserver:
        condition: service_started
      aspire-dashboard:
        condition: service_started
      events-api:
        condition: service_started
    environment:
      - ENVIRONMENT=Development
    restart: on-failure
    networks:
      - ticketbuddy-network
  tickets-migrations:
    container_name: tickets-migrations
    build:
      context: .
      dockerfile: Tickets/Host.Migrations/Dockerfile
    depends_on:
      sqlserver:
        condition: service_started
    environment:
      - ENVIRONMENT=Development
    networks:
      - ticketbuddy-network
    restart: "no"
  tickets-messaging-inbox:
    container_name: tickets-messaging-inbox
    build:
      context: .
      dockerfile: Tickets/Host.Messaging.Inbox/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
      sqlserver:
        condition: service_started
      tickets-migrations:
        condition: service_completed_successfully
    environment:
      - ENVIRONMENT=Development
    restart: on-failure
    networks:
      - ticketbuddy-network
  users-migrations:
    container_name: users-migrations
    build:
      context: .
      dockerfile: Users/Host.Migrations/Dockerfile
    depends_on:
      sqlserver:
        condition: service_started
    environment:
      - ENVIRONMENT=Development
    networks:
      - ticketbuddy-network
    restart: "no"
  users-api:
    container_name: users-api
    build:
      context: .
      dockerfile: Users/Host.Api/Dockerfile
    depends_on:
      users-migrations:
        condition: service_completed_successfully
      rabbitmq:
        condition: service_healthy
      aspire-dashboard:
        condition: service_started
    environment:
      - ENVIRONMENT=Development
    ports:
      - "8082:8080"
      - "8083:8081"
    restart: on-failure
    networks:
      - ticketbuddy-network
  users-messaging-outbox:
    container_name: users-messaging-outbox
    build:
      context: .
      dockerfile: Users/Host.Messaging.Outbox/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
      sqlserver:
        condition: service_started
      aspire-dashboard:
        condition: service_started
      users-api:
        condition: service_started
    environment:
      - ENVIRONMENT=Development
    restart: on-failure
    networks:
      - ticketbuddy-network

volumes:
  ticket_buddy_sql_server:
  rabbitmq_data:
  
networks:
  ticketbuddy-network:
    name: ticketbuddy-network
    driver: bridge
